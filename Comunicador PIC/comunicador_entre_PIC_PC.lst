;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 05/03/2018 14:39:21
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF002EF02  	GOTO        1028
_interrupt:
;comunicador_entre_PIC_PC.c,183 :: 		void interrupt() //a interrupção de alta prioridade apenas armazenará os dados recebidos (no momento apenas do computador)
0x0008	0xF016C000  	MOVFF       R0, 22
0x000C	0xF015C001  	MOVFF       R1, 21
;comunicador_entre_PIC_PC.c,185 :: 		if(RC1IF_bit)
0x0010	0xF017CFE1  	MOVFF       FSR1L, 23
0x0014	0xF018CFE2  	MOVFF       FSR1H, 24
0x0018	0xAA9E      	BTFSS       RC1IF_bit, BitPos(RC1IF_bit+0) 
0x001A	0xD01B      	BRA         L_interrupt39
;comunicador_entre_PIC_PC.c,187 :: 		bufferPc[posBufferPc] = RC1REG;
0x001C	0x0E79      	MOVLW       bufferPc
0x001E	0x0101      	MOVLB       1
0x0020	0x252E      	ADDWF       _posBufferPc, 0, 1
0x0022	0x6EE1      	MOVWF       FSR1L 
0x0024	0x0E01      	MOVLW       hi_addr(bufferPc)
0x0026	0x212F      	ADDWFC      _posBufferPc+1, 0, 1
0x0028	0x6EE2      	MOVWF       FSR1H 
0x002A	0xFFE6CFAE  	MOVFF       RC1REG, POSTINC1
;comunicador_entre_PIC_PC.c,188 :: 		posBufferPc++;
0x002E	0x0E01      	MOVLW       1
0x0030	0x252E      	ADDWF       _posBufferPc, 0, 1
0x0032	0x6E00      	MOVWF       R0 
0x0034	0x0E00      	MOVLW       0
0x0036	0x212F      	ADDWFC      _posBufferPc+1, 0, 1
0x0038	0x6E01      	MOVWF       R1 
0x003A	0xF12EC000  	MOVFF       R0, _posBufferPc
0x003E	0xF12FC001  	MOVFF       R1, _posBufferPc+1
;comunicador_entre_PIC_PC.c,189 :: 		bufferPc[posBufferPc] = 0x00;
0x0042	0x0E79      	MOVLW       bufferPc
0x0044	0x252E      	ADDWF       _posBufferPc, 0, 1
0x0046	0x6EE1      	MOVWF       FSR1L 
0x0048	0x0E01      	MOVLW       hi_addr(bufferPc)
0x004A	0x212F      	ADDWFC      _posBufferPc+1, 0, 1
0x004C	0x6EE2      	MOVWF       FSR1H 
0x004E	0x6AE6      	CLRF        POSTINC1 
;comunicador_entre_PIC_PC.c,190 :: 		}
0x0050	0xD01C      	BRA         L_interrupt40
L_interrupt39:
;comunicador_entre_PIC_PC.c,191 :: 		else if(RC2IF_bit)
0x0052	0xAAA4      	BTFSS       RC2IF_bit, BitPos(RC2IF_bit+0) 
0x0054	0xD01A      	BRA         L_interrupt41
;comunicador_entre_PIC_PC.c,194 :: 		bufferModulo[posBufferModulo] = RC2REG;
0x0056	0x0101      	MOVLB       1
0x0058	0x0EB6      	MOVLW       bufferModulo
0x005A	0x252C      	ADDWF       _posBufferModulo, 0, 1
0x005C	0x6EE1      	MOVWF       FSR1L 
0x005E	0x0E01      	MOVLW       hi_addr(bufferModulo)
0x0060	0x212D      	ADDWFC      _posBufferModulo+1, 0, 1
0x0062	0x6EE2      	MOVWF       FSR1H 
0x0064	0xFFE6CF74  	MOVFF       RC2REG, POSTINC1
;comunicador_entre_PIC_PC.c,195 :: 		posBufferModulo++;
0x0068	0x0E01      	MOVLW       1
0x006A	0x252C      	ADDWF       _posBufferModulo, 0, 1
0x006C	0x6E00      	MOVWF       R0 
0x006E	0x0E00      	MOVLW       0
0x0070	0x212D      	ADDWFC      _posBufferModulo+1, 0, 1
0x0072	0x6E01      	MOVWF       R1 
0x0074	0xF12CC000  	MOVFF       R0, _posBufferModulo
0x0078	0xF12DC001  	MOVFF       R1, _posBufferModulo+1
;comunicador_entre_PIC_PC.c,196 :: 		bufferModulo[posBufferModulo] = 0x00;
0x007C	0x0EB6      	MOVLW       bufferModulo
0x007E	0x252C      	ADDWF       _posBufferModulo, 0, 1
0x0080	0x6EE1      	MOVWF       FSR1L 
0x0082	0x0E01      	MOVLW       hi_addr(bufferModulo)
0x0084	0x212D      	ADDWFC      _posBufferModulo+1, 0, 1
0x0086	0x6EE2      	MOVWF       FSR1H 
0x0088	0x6AE6      	CLRF        POSTINC1 
;comunicador_entre_PIC_PC.c,197 :: 		}
L_interrupt41:
L_interrupt40:
;comunicador_entre_PIC_PC.c,198 :: 		T6CON.TMR6ON = 1;
0x008A	0x010F      	MOVLB       15
0x008C	0x854A      	BSF         T6CON, 2, 1
;comunicador_entre_PIC_PC.c,199 :: 		TMR6 = 0;
0x008E	0x6B4C      	CLRF        TMR6, 1
;comunicador_entre_PIC_PC.c,200 :: 		}
L_end_interrupt:
L__interrupt65:
0x0090	0xF000C016  	MOVFF       22, R0
0x0094	0xF001C015  	MOVFF       21, R1
0x0098	0xFFE1C017  	MOVFF       23, FSR1L
0x009C	0xFFE2C018  	MOVFF       24, FSR1H
0x00A0	0x0011      	RETFIE      1
; end of _interrupt
_read:
;comunicador_entre_PIC_PC.c,75 :: 		char read(char *mensagem, unsigned char *buf) //retorna 1 se a mensagem for encontrada e zero caso não (no buffer, no caso)
;comunicador_entre_PIC_PC.c,78 :: 		int j = 0;
0x00A2	0x0102      	MOVLB       2
0x00A4	0x6B05      	CLRF        read_j_L0, 1
0x00A6	0x6B06      	CLRF        read_j_L0+1, 1
;comunicador_entre_PIC_PC.c,79 :: 		for(i = 0 ; buf[i] != 0x00; i+= 1 + j)
0x00A8	0x6A04      	CLRF        R4 
0x00AA	0x6A05      	CLRF        R5 
L_read8:
0x00AC	0x5004      	MOVF        R4, 0 
0x00AE	0x2503      	ADDWF       FARG_read_buf, 0, 1
0x00B0	0x6EE9      	MOVWF       FSR0L 
0x00B2	0x5005      	MOVF        R5, 0 
0x00B4	0x2104      	ADDWFC      FARG_read_buf+1, 0, 1
0x00B6	0x6EEA      	MOVWF       FSR0H 
0x00B8	0x50EE      	MOVF        POSTINC0, 0 
0x00BA	0x0A00      	XORLW       0
0x00BC	0xE061      	BZ          L_read9
;comunicador_entre_PIC_PC.c,81 :: 		for(j = 0; mensagem[j] == buf[i+j]; j++)
0x00BE	0x6B05      	CLRF        read_j_L0, 1
0x00C0	0x6B06      	CLRF        read_j_L0+1, 1
L_read11:
0x00C2	0x5105      	MOVF        read_j_L0, 0, 1
0x00C4	0x2501      	ADDWF       FARG_read_mensagem, 0, 1
0x00C6	0x6EE9      	MOVWF       FSR0L 
0x00C8	0x5106      	MOVF        read_j_L0+1, 0, 1
0x00CA	0x2102      	ADDWFC      FARG_read_mensagem+1, 0, 1
0x00CC	0x6EEA      	MOVWF       FSR0H 
0x00CE	0x5105      	MOVF        read_j_L0, 0, 1
0x00D0	0x2404      	ADDWF       R4, 0 
0x00D2	0x6E00      	MOVWF       R0 
0x00D4	0x5106      	MOVF        read_j_L0+1, 0, 1
0x00D6	0x2005      	ADDWFC      R5, 0 
0x00D8	0x6E01      	MOVWF       R1 
0x00DA	0x5000      	MOVF        R0, 0 
0x00DC	0x2503      	ADDWF       FARG_read_buf, 0, 1
0x00DE	0x6ED9      	MOVWF       FSR2L 
0x00E0	0x5001      	MOVF        R1, 0 
0x00E2	0x2104      	ADDWFC      FARG_read_buf+1, 0, 1
0x00E4	0x6EDA      	MOVWF       FSR2H 
0x00E6	0x50EE      	MOVF        POSTINC0, 0 
0x00E8	0x18DE      	XORWF       POSTINC2, 0 
0x00EA	0xE13F      	BNZ         L_read12
;comunicador_entre_PIC_PC.c,83 :: 		if(mensagem[j+1] == 0x00)
0x00EC	0x0E01      	MOVLW       1
0x00EE	0x2505      	ADDWF       read_j_L0, 0, 1
0x00F0	0x6E00      	MOVWF       R0 
0x00F2	0x0E00      	MOVLW       0
0x00F4	0x2106      	ADDWFC      read_j_L0+1, 0, 1
0x00F6	0x6E01      	MOVWF       R1 
0x00F8	0x5000      	MOVF        R0, 0 
0x00FA	0x2501      	ADDWF       FARG_read_mensagem, 0, 1
0x00FC	0x6EE9      	MOVWF       FSR0L 
0x00FE	0x5001      	MOVF        R1, 0 
0x0100	0x2102      	ADDWFC      FARG_read_mensagem+1, 0, 1
0x0102	0x6EEA      	MOVWF       FSR0H 
0x0104	0x50EE      	MOVF        POSTINC0, 0 
0x0106	0x0A00      	XORLW       0
0x0108	0xE12D      	BNZ         L_read14
;comunicador_entre_PIC_PC.c,85 :: 		margeIn = i;
0x010A	0xF1F2C004  	MOVFF       R4, _margeIn
0x010E	0xF1F3C005  	MOVFF       R5, _margeIn+1
;comunicador_entre_PIC_PC.c,86 :: 		margeOut = i+j;
0x0112	0x5105      	MOVF        read_j_L0, 0, 1
0x0114	0x2404      	ADDWF       R4, 0 
0x0116	0x6E00      	MOVWF       R0 
0x0118	0x5106      	MOVF        read_j_L0+1, 0, 1
0x011A	0x2005      	ADDWFC      R5, 0 
0x011C	0x6E01      	MOVWF       R1 
0x011E	0xF177C000  	MOVFF       R0, _margeOut
0x0122	0xF178C001  	MOVFF       R1, _margeOut+1
;comunicador_entre_PIC_PC.c,87 :: 		buf[margeOut] = buf[margeIn] = 0xFF;
0x0126	0x5000      	MOVF        R0, 0 
0x0128	0x2503      	ADDWF       FARG_read_buf, 0, 1
0x012A	0x6E02      	MOVWF       R2 
0x012C	0x5001      	MOVF        R1, 0 
0x012E	0x2104      	ADDWFC      FARG_read_buf+1, 0, 1
0x0130	0x6E03      	MOVWF       R3 
0x0132	0x5004      	MOVF        R4, 0 
0x0134	0x2503      	ADDWF       FARG_read_buf, 0, 1
0x0136	0x6E00      	MOVWF       R0 
0x0138	0x5005      	MOVF        R5, 0 
0x013A	0x2104      	ADDWFC      FARG_read_buf+1, 0, 1
0x013C	0x6E01      	MOVWF       R1 
0x013E	0xFFE1C000  	MOVFF       R0, FSR1L
0x0142	0xFFE2C001  	MOVFF       R1, FSR1H
0x0146	0x0EFF      	MOVLW       255
0x0148	0x6EE6      	MOVWF       POSTINC1 
0x014A	0xFFE9C000  	MOVFF       R0, FSR0L
0x014E	0xFFEAC001  	MOVFF       R1, FSR0H
0x0152	0xFFE1C002  	MOVFF       R2, FSR1L
0x0156	0xFFE2C003  	MOVFF       R3, FSR1H
0x015A	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;comunicador_entre_PIC_PC.c,88 :: 		return 1;
0x015E	0x0E01      	MOVLW       1
0x0160	0x6E00      	MOVWF       R0 
0x0162	0xD00F      	BRA         L_end_read
;comunicador_entre_PIC_PC.c,89 :: 		}
L_read14:
;comunicador_entre_PIC_PC.c,81 :: 		for(j = 0; mensagem[j] == buf[i+j]; j++)
0x0164	0x4B05      	INFSNZ      read_j_L0, 1, 1
0x0166	0x2B06      	INCF        read_j_L0+1, 1, 1
;comunicador_entre_PIC_PC.c,90 :: 		}
0x0168	0xD7AC      	BRA         L_read11
L_read12:
;comunicador_entre_PIC_PC.c,79 :: 		for(i = 0 ; buf[i] != 0x00; i+= 1 + j)
0x016A	0x0E01      	MOVLW       1
0x016C	0x2505      	ADDWF       read_j_L0, 0, 1
0x016E	0x6E00      	MOVWF       R0 
0x0170	0x0E00      	MOVLW       0
0x0172	0x2106      	ADDWFC      read_j_L0+1, 0, 1
0x0174	0x6E01      	MOVWF       R1 
0x0176	0x5000      	MOVF        R0, 0 
0x0178	0x2604      	ADDWF       R4, 1 
0x017A	0x5001      	MOVF        R1, 0 
0x017C	0x2205      	ADDWFC      R5, 1 
;comunicador_entre_PIC_PC.c,91 :: 		}
0x017E	0xD796      	BRA         L_read8
L_read9:
;comunicador_entre_PIC_PC.c,92 :: 		return 0;
0x0180	0x6A00      	CLRF        R0 
;comunicador_entre_PIC_PC.c,93 :: 		}
L_end_read:
0x0182	0x0012      	RETURN      0
; end of _read
_escrever:
;comunicador_entre_PIC_PC.c,98 :: 		void escrever(char paraQuem, char *mensagem)
;comunicador_entre_PIC_PC.c,102 :: 		if(paraQuem = 'p') regSend = &TXREG1;
0x0184	0x0E70      	MOVLW       112
0x0186	0x0102      	MOVLB       2
0x0188	0x6F01      	MOVWF       FARG_escrever_paraQuem, 1
0x018A	0x0EAD      	MOVLW       TXREG1
0x018C	0x6E03      	MOVWF       R3 
0x018E	0x0E0F      	MOVLW       hi_addr(TXREG1)
0x0190	0x6E04      	MOVWF       R4 
;comunicador_entre_PIC_PC.c,103 :: 		else regSend = &TXREG2;
L_escrever16:
;comunicador_entre_PIC_PC.c,104 :: 		for(i = 0; mensagem[i] != 0x00; i++)
0x0192	0x6A01      	CLRF        R1 
0x0194	0x6A02      	CLRF        R2 
L_escrever17:
0x0196	0x5001      	MOVF        R1, 0 
0x0198	0x2502      	ADDWF       FARG_escrever_mensagem, 0, 1
0x019A	0x6EE9      	MOVWF       FSR0L 
0x019C	0x5002      	MOVF        R2, 0 
0x019E	0x2103      	ADDWFC      FARG_escrever_mensagem+1, 0, 1
0x01A0	0x6EEA      	MOVWF       FSR0H 
0x01A2	0x50EE      	MOVF        POSTINC0, 0 
0x01A4	0x0A00      	XORLW       0
0x01A6	0xE017      	BZ          L_escrever18
;comunicador_entre_PIC_PC.c,106 :: 		*regSend = mensagem[i];
0x01A8	0x5001      	MOVF        R1, 0 
0x01AA	0x2502      	ADDWF       FARG_escrever_mensagem, 0, 1
0x01AC	0x6EE9      	MOVWF       FSR0L 
0x01AE	0x5002      	MOVF        R2, 0 
0x01B0	0x2103      	ADDWFC      FARG_escrever_mensagem+1, 0, 1
0x01B2	0x6EEA      	MOVWF       FSR0H 
0x01B4	0xFFE1C003  	MOVFF       R3, FSR1L
0x01B8	0xFFE2C004  	MOVFF       R4, FSR1H
0x01BC	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;comunicador_entre_PIC_PC.c,107 :: 		delay_ms(1);
0x01C0	0x0E0B      	MOVLW       11
0x01C2	0x6E0C      	MOVWF       R12, 0
0x01C4	0x0E0F      	MOVLW       15
0x01C6	0x6E0D      	MOVWF       R13, 0
L_escrever20:
0x01C8	0x2E0D      	DECFSZ      R13, 1, 0
0x01CA	0xD7FE      	BRA         L_escrever20
0x01CC	0x2E0C      	DECFSZ      R12, 1, 0
0x01CE	0xD7FC      	BRA         L_escrever20
;comunicador_entre_PIC_PC.c,104 :: 		for(i = 0; mensagem[i] != 0x00; i++)
0x01D0	0x4A01      	INFSNZ      R1, 1 
0x01D2	0x2A02      	INCF        R2, 1 
;comunicador_entre_PIC_PC.c,108 :: 		}
0x01D4	0xD7E0      	BRA         L_escrever17
L_escrever18:
;comunicador_entre_PIC_PC.c,109 :: 		*regSend = '\n';
0x01D6	0xFFE1C003  	MOVFF       R3, FSR1L
0x01DA	0xFFE2C004  	MOVFF       R4, FSR1H
0x01DE	0x0E0A      	MOVLW       10
0x01E0	0x6EE6      	MOVWF       POSTINC1 
;comunicador_entre_PIC_PC.c,110 :: 		}
L_end_escrever:
0x01E2	0x0012      	RETURN      0
; end of _escrever
_loop:
;comunicador_entre_PIC_PC.c,112 :: 		unsigned short loop()
;comunicador_entre_PIC_PC.c,115 :: 		read("relatorio")
0x01E4	0x0EB1      	MOVLW       ?lstr1_comunicador_entre_PIC_PC
0x01E6	0x0102      	MOVLB       2
0x01E8	0x6F01      	MOVWF       FARG_read_mensagem, 1
0x01EA	0x0E00      	MOVLW       hi_addr(?lstr1_comunicador_entre_PIC_PC)
0x01EC	0x6F02      	MOVWF       FARG_read_mensagem+1, 1
0x01EE	0x0E79      	MOVLW       bufferPc
0x01F0	0x6F03      	MOVWF       FARG_read_buf, 1
0x01F2	0x0E01      	MOVLW       hi_addr(bufferPc)
0x01F4	0x6F04      	MOVWF       FARG_read_buf+1, 1
0x01F6	0xDF55      	RCALL       _read
0x01F8	0x5200      	MOVF        R0, 1 
0x01FA	0xE010      	BZ          L_loop21
;comunicador_entre_PIC_PC.c,117 :: 		escrever('p', "Autor: Henrique Mauler Borges");
0x01FC	0x0E70      	MOVLW       112
0x01FE	0x6F01      	MOVWF       FARG_escrever_paraQuem, 1
0x0200	0x0E93      	MOVLW       ?lstr2_comunicador_entre_PIC_PC
0x0202	0x6F02      	MOVWF       FARG_escrever_mensagem, 1
0x0204	0x0E00      	MOVLW       hi_addr(?lstr2_comunicador_entre_PIC_PC)
0x0206	0x6F03      	MOVWF       FARG_escrever_mensagem+1, 1
0x0208	0xDFBD      	RCALL       _escrever
;comunicador_entre_PIC_PC.c,118 :: 		escrever('p', "Curso técnico em eletrônica");
0x020A	0x0E70      	MOVLW       112
0x020C	0x6F01      	MOVWF       FARG_escrever_paraQuem, 1
0x020E	0x0EBB      	MOVLW       ?lstr3_comunicador_entre_PIC_PC
0x0210	0x6F02      	MOVWF       FARG_escrever_mensagem, 1
0x0212	0x0E00      	MOVLW       hi_addr(?lstr3_comunicador_entre_PIC_PC)
0x0214	0x6F03      	MOVWF       FARG_escrever_mensagem+1, 1
0x0216	0xDFB6      	RCALL       _escrever
;comunicador_entre_PIC_PC.c,119 :: 		return 0;
0x0218	0x6A00      	CLRF        R0 
0x021A	0xD0EB      	BRA         L_end_loop
;comunicador_entre_PIC_PC.c,120 :: 		}
L_loop21:
;comunicador_entre_PIC_PC.c,122 :: 		read("Qual a sua frequencia?")
0x021C	0x0EFD      	MOVLW       ?lstr4_comunicador_entre_PIC_PC
0x021E	0x6F01      	MOVWF       FARG_read_mensagem, 1
0x0220	0x0E00      	MOVLW       hi_addr(?lstr4_comunicador_entre_PIC_PC)
0x0222	0x6F02      	MOVWF       FARG_read_mensagem+1, 1
0x0224	0x0E79      	MOVLW       bufferPc
0x0226	0x6F03      	MOVWF       FARG_read_buf, 1
0x0228	0x0E01      	MOVLW       hi_addr(bufferPc)
0x022A	0x6F04      	MOVWF       FARG_read_buf+1, 1
0x022C	0xDF3A      	RCALL       _read
0x022E	0x5200      	MOVF        R0, 1 
0x0230	0xE010      	BZ          L_loop22
;comunicador_entre_PIC_PC.c,125 :: 		unsigned short clock = Clock_MHz();
;comunicador_entre_PIC_PC.c,126 :: 		escrever('p', "A frequencia de trabalho é: ");
0x0232	0x0E70      	MOVLW       112
0x0234	0x6F01      	MOVWF       FARG_escrever_paraQuem, 1
0x0236	0x0EE0      	MOVLW       ?lstr5_comunicador_entre_PIC_PC
0x0238	0x6F02      	MOVWF       FARG_escrever_mensagem, 1
0x023A	0x0E00      	MOVLW       hi_addr(?lstr5_comunicador_entre_PIC_PC)
0x023C	0x6F03      	MOVWF       FARG_escrever_mensagem+1, 1
0x023E	0xDFA2      	RCALL       _escrever
;comunicador_entre_PIC_PC.c,127 :: 		escrever('p', saidaclock);
0x0240	0x0E70      	MOVLW       112
0x0242	0x6F01      	MOVWF       FARG_escrever_paraQuem, 1
0x0244	0x0EF6      	MOVLW       loop_saidaclock_L1
0x0246	0x6F02      	MOVWF       FARG_escrever_mensagem, 1
0x0248	0x0E01      	MOVLW       hi_addr(loop_saidaclock_L1)
0x024A	0x6F03      	MOVWF       FARG_escrever_mensagem+1, 1
0x024C	0xDF9B      	RCALL       _escrever
;comunicador_entre_PIC_PC.c,128 :: 		return 0;
0x024E	0x6A00      	CLRF        R0 
0x0250	0xD0D0      	BRA         L_end_loop
;comunicador_entre_PIC_PC.c,129 :: 		}
L_loop22:
;comunicador_entre_PIC_PC.c,131 :: 		read("invadido")
0x0252	0x0ED7      	MOVLW       ?lstr6_comunicador_entre_PIC_PC
0x0254	0x6F01      	MOVWF       FARG_read_mensagem, 1
0x0256	0x0E00      	MOVLW       hi_addr(?lstr6_comunicador_entre_PIC_PC)
0x0258	0x6F02      	MOVWF       FARG_read_mensagem+1, 1
0x025A	0x0E79      	MOVLW       bufferPc
0x025C	0x6F03      	MOVWF       FARG_read_buf, 1
0x025E	0x0E01      	MOVLW       hi_addr(bufferPc)
0x0260	0x6F04      	MOVWF       FARG_read_buf+1, 1
0x0262	0xDF1F      	RCALL       _read
0x0264	0x5200      	MOVF        R0, 1 
0x0266	0xE009      	BZ          L_loop23
;comunicador_entre_PIC_PC.c,133 :: 		escrever('m',"invasao");
0x0268	0x0E6D      	MOVLW       109
0x026A	0x6F01      	MOVWF       FARG_escrever_paraQuem, 1
0x026C	0x0E33      	MOVLW       ?lstr7_comunicador_entre_PIC_PC
0x026E	0x6F02      	MOVWF       FARG_escrever_mensagem, 1
0x0270	0x0E00      	MOVLW       hi_addr(?lstr7_comunicador_entre_PIC_PC)
0x0272	0x6F03      	MOVWF       FARG_escrever_mensagem+1, 1
0x0274	0xDF87      	RCALL       _escrever
;comunicador_entre_PIC_PC.c,134 :: 		return 0;
0x0276	0x6A00      	CLRF        R0 
0x0278	0xD0BC      	BRA         L_end_loop
;comunicador_entre_PIC_PC.c,135 :: 		}
L_loop23:
;comunicador_entre_PIC_PC.c,138 :: 		read("Me responda micro!")
0x027A	0x0E20      	MOVLW       ?lstr8_comunicador_entre_PIC_PC
0x027C	0x6F01      	MOVWF       FARG_read_mensagem, 1
0x027E	0x0E00      	MOVLW       hi_addr(?lstr8_comunicador_entre_PIC_PC)
0x0280	0x6F02      	MOVWF       FARG_read_mensagem+1, 1
0x0282	0x0E79      	MOVLW       bufferPc
0x0284	0x6F03      	MOVWF       FARG_read_buf, 1
0x0286	0x0E01      	MOVLW       hi_addr(bufferPc)
0x0288	0x6F04      	MOVWF       FARG_read_buf+1, 1
0x028A	0xDF0B      	RCALL       _read
0x028C	0x5200      	MOVF        R0, 1 
0x028E	0xE02C      	BZ          L_loop24
;comunicador_entre_PIC_PC.c,140 :: 		TRISB = 0x00;
0x0290	0x6A93      	CLRF        TRISB 
;comunicador_entre_PIC_PC.c,141 :: 		PORTB = 0xFF;
0x0292	0x0EFF      	MOVLW       255
0x0294	0x6E81      	MOVWF       PORTB 
;comunicador_entre_PIC_PC.c,142 :: 		delay_ms(2000);
0x0296	0x0E4F      	MOVLW       79
0x0298	0x6E0B      	MOVWF       R11, 0
0x029A	0x0EA2      	MOVLW       162
0x029C	0x6E0C      	MOVWF       R12, 0
0x029E	0x0EA8      	MOVLW       168
0x02A0	0x6E0D      	MOVWF       R13, 0
L_loop25:
0x02A2	0x2E0D      	DECFSZ      R13, 1, 0
0x02A4	0xD7FE      	BRA         L_loop25
0x02A6	0x2E0C      	DECFSZ      R12, 1, 0
0x02A8	0xD7FC      	BRA         L_loop25
0x02AA	0x2E0B      	DECFSZ      R11, 1, 0
0x02AC	0xD7FA      	BRA         L_loop25
0x02AE	0x0000      	NOP
;comunicador_entre_PIC_PC.c,143 :: 		PORTB = 0x00;
0x02B0	0x6A81      	CLRF        PORTB 
;comunicador_entre_PIC_PC.c,144 :: 		delay_ms(20000);
0x02B2	0x0E04      	MOVLW       4
0x02B4	0x6E0A      	MOVWF       R10, 0
0x02B6	0x0E13      	MOVLW       19
0x02B8	0x6E0B      	MOVWF       R11, 0
0x02BA	0x0E51      	MOVLW       81
0x02BC	0x6E0C      	MOVWF       R12, 0
0x02BE	0x0EA3      	MOVLW       163
0x02C0	0x6E0D      	MOVWF       R13, 0
L_loop26:
0x02C2	0x2E0D      	DECFSZ      R13, 1, 0
0x02C4	0xD7FE      	BRA         L_loop26
0x02C6	0x2E0C      	DECFSZ      R12, 1, 0
0x02C8	0xD7FC      	BRA         L_loop26
0x02CA	0x2E0B      	DECFSZ      R11, 1, 0
0x02CC	0xD7FA      	BRA         L_loop26
0x02CE	0x2E0A      	DECFSZ      R10, 1, 0
0x02D0	0xD7F8      	BRA         L_loop26
;comunicador_entre_PIC_PC.c,145 :: 		PORTB = 0xFF;
0x02D2	0x0EFF      	MOVLW       255
0x02D4	0x6E81      	MOVWF       PORTB 
;comunicador_entre_PIC_PC.c,146 :: 		escrever('p',"valor2");
0x02D6	0x0E70      	MOVLW       112
0x02D8	0x6F01      	MOVWF       FARG_escrever_paraQuem, 1
0x02DA	0x0E19      	MOVLW       ?lstr9_comunicador_entre_PIC_PC
0x02DC	0x6F02      	MOVWF       FARG_escrever_mensagem, 1
0x02DE	0x0E00      	MOVLW       hi_addr(?lstr9_comunicador_entre_PIC_PC)
0x02E0	0x6F03      	MOVWF       FARG_escrever_mensagem+1, 1
0x02E2	0xDF50      	RCALL       _escrever
;comunicador_entre_PIC_PC.c,147 :: 		return 0;
0x02E4	0x6A00      	CLRF        R0 
0x02E6	0xD085      	BRA         L_end_loop
;comunicador_entre_PIC_PC.c,150 :: 		}
L_loop24:
;comunicador_entre_PIC_PC.c,152 :: 		read("BlocoEnergizado:8:Intensidade:15")
0x02E8	0x0E3B      	MOVLW       ?lstr10_comunicador_entre_PIC_PC
0x02EA	0x6F01      	MOVWF       FARG_read_mensagem, 1
0x02EC	0x0E00      	MOVLW       hi_addr(?lstr10_comunicador_entre_PIC_PC)
0x02EE	0x6F02      	MOVWF       FARG_read_mensagem+1, 1
0x02F0	0x0E79      	MOVLW       bufferPc
0x02F2	0x6F03      	MOVWF       FARG_read_buf, 1
0x02F4	0x0E01      	MOVLW       hi_addr(bufferPc)
0x02F6	0x6F04      	MOVWF       FARG_read_buf+1, 1
0x02F8	0xDED4      	RCALL       _read
0x02FA	0x5200      	MOVF        R0, 1 
0x02FC	0xE008      	BZ          L_loop27
;comunicador_entre_PIC_PC.c,154 :: 		escrever('m',"Invadido");
0x02FE	0x0E6D      	MOVLW       109
0x0300	0x6F01      	MOVWF       FARG_escrever_paraQuem, 1
0x0302	0x0E8A      	MOVLW       ?lstr11_comunicador_entre_PIC_PC
0x0304	0x6F02      	MOVWF       FARG_escrever_mensagem, 1
0x0306	0x0E00      	MOVLW       hi_addr(?lstr11_comunicador_entre_PIC_PC)
0x0308	0x6F03      	MOVWF       FARG_escrever_mensagem+1, 1
0x030A	0xDF3C      	RCALL       _escrever
;comunicador_entre_PIC_PC.c,155 :: 		}
0x030C	0xD025      	BRA         L_loop28
L_loop27:
;comunicador_entre_PIC_PC.c,156 :: 		else read("BlocoEnergizado:10:Intensidade:15")
0x030E	0x0E68      	MOVLW       ?lstr12_comunicador_entre_PIC_PC
0x0310	0x6F01      	MOVWF       FARG_read_mensagem, 1
0x0312	0x0E00      	MOVLW       hi_addr(?lstr12_comunicador_entre_PIC_PC)
0x0314	0x6F02      	MOVWF       FARG_read_mensagem+1, 1
0x0316	0x0E79      	MOVLW       bufferPc
0x0318	0x6F03      	MOVWF       FARG_read_buf, 1
0x031A	0x0E01      	MOVLW       hi_addr(bufferPc)
0x031C	0x6F04      	MOVWF       FARG_read_buf+1, 1
0x031E	0xDEC1      	RCALL       _read
0x0320	0x5200      	MOVF        R0, 1 
0x0322	0xE008      	BZ          L_loop29
;comunicador_entre_PIC_PC.c,158 :: 		escrever('m',"Horario:dia");
0x0324	0x0E6D      	MOVLW       109
0x0326	0x6F01      	MOVWF       FARG_escrever_paraQuem, 1
0x0328	0x0E5C      	MOVLW       ?lstr13_comunicador_entre_PIC_PC
0x032A	0x6F02      	MOVWF       FARG_escrever_mensagem, 1
0x032C	0x0E00      	MOVLW       hi_addr(?lstr13_comunicador_entre_PIC_PC)
0x032E	0x6F03      	MOVWF       FARG_escrever_mensagem+1, 1
0x0330	0xDF29      	RCALL       _escrever
;comunicador_entre_PIC_PC.c,159 :: 		}
0x0332	0xD012      	BRA         L_loop30
L_loop29:
;comunicador_entre_PIC_PC.c,160 :: 		else read("BlocoEnergizado:10:Intensidade:1")
0x0334	0x0E43      	MOVLW       ?lstr14_comunicador_entre_PIC_PC
0x0336	0x6F01      	MOVWF       FARG_read_mensagem, 1
0x0338	0x0E01      	MOVLW       hi_addr(?lstr14_comunicador_entre_PIC_PC)
0x033A	0x6F02      	MOVWF       FARG_read_mensagem+1, 1
0x033C	0x0E79      	MOVLW       bufferPc
0x033E	0x6F03      	MOVWF       FARG_read_buf, 1
0x0340	0x0E01      	MOVLW       hi_addr(bufferPc)
0x0342	0x6F04      	MOVWF       FARG_read_buf+1, 1
0x0344	0xDEAE      	RCALL       _read
0x0346	0x5200      	MOVF        R0, 1 
0x0348	0xE007      	BZ          L_loop31
;comunicador_entre_PIC_PC.c,162 :: 		escrever('m',"Horario:noite");
0x034A	0x0E6D      	MOVLW       109
0x034C	0x6F01      	MOVWF       FARG_escrever_paraQuem, 1
0x034E	0x0E35      	MOVLW       ?lstr15_comunicador_entre_PIC_PC
0x0350	0x6F02      	MOVWF       FARG_escrever_mensagem, 1
0x0352	0x0E01      	MOVLW       hi_addr(?lstr15_comunicador_entre_PIC_PC)
0x0354	0x6F03      	MOVWF       FARG_escrever_mensagem+1, 1
0x0356	0xDF16      	RCALL       _escrever
;comunicador_entre_PIC_PC.c,163 :: 		}
L_loop31:
L_loop30:
L_loop28:
;comunicador_entre_PIC_PC.c,171 :: 		read("LED1") escrever('p',"valor2");
0x0358	0x0E30      	MOVLW       ?lstr16_comunicador_entre_PIC_PC
0x035A	0x6F01      	MOVWF       FARG_read_mensagem, 1
0x035C	0x0E01      	MOVLW       hi_addr(?lstr16_comunicador_entre_PIC_PC)
0x035E	0x6F02      	MOVWF       FARG_read_mensagem+1, 1
0x0360	0x0EB6      	MOVLW       bufferModulo
0x0362	0x6F03      	MOVWF       FARG_read_buf, 1
0x0364	0x0E01      	MOVLW       hi_addr(bufferModulo)
0x0366	0x6F04      	MOVWF       FARG_read_buf+1, 1
0x0368	0xDE9C      	RCALL       _read
0x036A	0x5200      	MOVF        R0, 1 
0x036C	0xE008      	BZ          L_loop32
0x036E	0x0E70      	MOVLW       112
0x0370	0x6F01      	MOVWF       FARG_escrever_paraQuem, 1
0x0372	0x0E70      	MOVLW       ?lstr17_comunicador_entre_PIC_PC
0x0374	0x6F02      	MOVWF       FARG_escrever_mensagem, 1
0x0376	0x0E01      	MOVLW       hi_addr(?lstr17_comunicador_entre_PIC_PC)
0x0378	0x6F03      	MOVWF       FARG_escrever_mensagem+1, 1
0x037A	0xDF04      	RCALL       _escrever
0x037C	0xD038      	BRA         L_loop33
L_loop32:
;comunicador_entre_PIC_PC.c,172 :: 		else read("LED2") escrever('p',"valor3");
0x037E	0x0E6B      	MOVLW       ?lstr18_comunicador_entre_PIC_PC
0x0380	0x6F01      	MOVWF       FARG_read_mensagem, 1
0x0382	0x0E01      	MOVLW       hi_addr(?lstr18_comunicador_entre_PIC_PC)
0x0384	0x6F02      	MOVWF       FARG_read_mensagem+1, 1
0x0386	0x0EB6      	MOVLW       bufferModulo
0x0388	0x6F03      	MOVWF       FARG_read_buf, 1
0x038A	0x0E01      	MOVLW       hi_addr(bufferModulo)
0x038C	0x6F04      	MOVWF       FARG_read_buf+1, 1
0x038E	0xDE89      	RCALL       _read
0x0390	0x5200      	MOVF        R0, 1 
0x0392	0xE008      	BZ          L_loop34
0x0394	0x0E70      	MOVLW       112
0x0396	0x6F01      	MOVWF       FARG_escrever_paraQuem, 1
0x0398	0x0E64      	MOVLW       ?lstr19_comunicador_entre_PIC_PC
0x039A	0x6F02      	MOVWF       FARG_escrever_mensagem, 1
0x039C	0x0E01      	MOVLW       hi_addr(?lstr19_comunicador_entre_PIC_PC)
0x039E	0x6F03      	MOVWF       FARG_escrever_mensagem+1, 1
0x03A0	0xDEF1      	RCALL       _escrever
0x03A2	0xD025      	BRA         L_loop35
L_loop34:
;comunicador_entre_PIC_PC.c,173 :: 		else read("LED3") escrever('p',"valor4");
0x03A4	0x0E20      	MOVLW       ?lstr20_comunicador_entre_PIC_PC
0x03A6	0x6F01      	MOVWF       FARG_read_mensagem, 1
0x03A8	0x0E01      	MOVLW       hi_addr(?lstr20_comunicador_entre_PIC_PC)
0x03AA	0x6F02      	MOVWF       FARG_read_mensagem+1, 1
0x03AC	0x0EB6      	MOVLW       bufferModulo
0x03AE	0x6F03      	MOVWF       FARG_read_buf, 1
0x03B0	0x0E01      	MOVLW       hi_addr(bufferModulo)
0x03B2	0x6F04      	MOVWF       FARG_read_buf+1, 1
0x03B4	0xDE76      	RCALL       _read
0x03B6	0x5200      	MOVF        R0, 1 
0x03B8	0xE008      	BZ          L_loop36
0x03BA	0x0E70      	MOVLW       112
0x03BC	0x6F01      	MOVWF       FARG_escrever_paraQuem, 1
0x03BE	0x0E19      	MOVLW       ?lstr21_comunicador_entre_PIC_PC
0x03C0	0x6F02      	MOVWF       FARG_escrever_mensagem, 1
0x03C2	0x0E01      	MOVLW       hi_addr(?lstr21_comunicador_entre_PIC_PC)
0x03C4	0x6F03      	MOVWF       FARG_escrever_mensagem+1, 1
0x03C6	0xDEDE      	RCALL       _escrever
0x03C8	0xD012      	BRA         L_loop37
L_loop36:
;comunicador_entre_PIC_PC.c,174 :: 		else read("LED4") escrever('p',"valor5");
0x03CA	0x0E14      	MOVLW       ?lstr22_comunicador_entre_PIC_PC
0x03CC	0x6F01      	MOVWF       FARG_read_mensagem, 1
0x03CE	0x0E01      	MOVLW       hi_addr(?lstr22_comunicador_entre_PIC_PC)
0x03D0	0x6F02      	MOVWF       FARG_read_mensagem+1, 1
0x03D2	0x0EB6      	MOVLW       bufferModulo
0x03D4	0x6F03      	MOVWF       FARG_read_buf, 1
0x03D6	0x0E01      	MOVLW       hi_addr(bufferModulo)
0x03D8	0x6F04      	MOVWF       FARG_read_buf+1, 1
0x03DA	0xDE63      	RCALL       _read
0x03DC	0x5200      	MOVF        R0, 1 
0x03DE	0xE007      	BZ          L_loop38
0x03E0	0x0E70      	MOVLW       112
0x03E2	0x6F01      	MOVWF       FARG_escrever_paraQuem, 1
0x03E4	0x0E25      	MOVLW       ?lstr23_comunicador_entre_PIC_PC
0x03E6	0x6F02      	MOVWF       FARG_escrever_mensagem, 1
0x03E8	0x0E01      	MOVLW       hi_addr(?lstr23_comunicador_entre_PIC_PC)
0x03EA	0x6F03      	MOVWF       FARG_escrever_mensagem+1, 1
0x03EC	0xDECB      	RCALL       _escrever
L_loop38:
L_loop37:
L_loop35:
L_loop33:
;comunicador_entre_PIC_PC.c,175 :: 		return 1;
0x03EE	0x0E01      	MOVLW       1
0x03F0	0x6E00      	MOVWF       R0 
;comunicador_entre_PIC_PC.c,181 :: 		}
L_end_loop:
0x03F2	0x0012      	RETURN      0
; end of _loop
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x03F4	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x03F6	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x03FA	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x03FC	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x03FE	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x0400	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x0402	0x0012      	RETURN      0
; end of ___CC2DW
_main:
0x0404	0xF003EC44  	CALL        1672, 0
;comunicador_entre_PIC_PC.c,202 :: 		void main()
;comunicador_entre_PIC_PC.c,208 :: 		TXSTA1.BRGH = 1; //Habilita o Intenso Baundrate (usa dois registradores para realiar a contagem de bits por segundo)
0x0408	0x84AC      	BSF         TXSTA1, 2 
;comunicador_entre_PIC_PC.c,209 :: 		BAUDCON1.BRG16 = 1; //Contador utiliza os dezesseis bits (o registrador SPBRG1 é utilizado caso esteja em um,e descarta o SPBRGH1 quando esta em zero)
0x040A	0x86B8      	BSF         BAUDCON1, 3 
;comunicador_entre_PIC_PC.c,210 :: 		SPBRGH1 = 0x00;
0x040C	0x6AB0      	CLRF        SPBRGH1 
;comunicador_entre_PIC_PC.c,211 :: 		SPBRG1 = 0x41; //baundrate configurado para 115200 (utilizando uma frequencia de aproxidamente 35MHz);
0x040E	0x0E41      	MOVLW       65
0x0410	0x6EAF      	MOVWF       SPBRG1 
;comunicador_entre_PIC_PC.c,213 :: 		TXSTA2.BRGH = 1; //Desabilita o Intenso Baundrate
0x0412	0x8472      	BSF         TXSTA2, 2 
;comunicador_entre_PIC_PC.c,214 :: 		BAUDCON2.BRG16 = 1; //Contador utiliza os dezesseis bits (o registrador SPBRG1 é utilizado,e descarta o SPBRGH1 quando esta em zero)
0x0414	0x8670      	BSF         BAUDCON2, 3 
;comunicador_entre_PIC_PC.c,215 :: 		SPBRGH2 = 0x00;
0x0416	0x6A76      	CLRF        SPBRGH2 
;comunicador_entre_PIC_PC.c,216 :: 		SPBRG2 = 0x45; //baundrate configurado para (utilizando uma frequencia de aproxidamente 35MHz);
0x0418	0x0E45      	MOVLW       69
0x041A	0x6E75      	MOVWF       SPBRG2 
;comunicador_entre_PIC_PC.c,219 :: 		TRISB = 0x00;
0x041C	0x6A93      	CLRF        TRISB 
;comunicador_entre_PIC_PC.c,220 :: 		TRISC = 0xFF; //os dois registradores acima possuem pinos referentes ao EUSART1 e EUSART2, respectivamente e devem ser setados como saída
0x041E	0x0EFF      	MOVLW       255
0x0420	0x6E94      	MOVWF       TRISC 
;comunicador_entre_PIC_PC.c,221 :: 		TRISD = 0xFF;
0x0422	0x0EFF      	MOVLW       255
0x0424	0x6E95      	MOVWF       TRISD 
;comunicador_entre_PIC_PC.c,222 :: 		PORTB = 0x00;
0x0426	0x6A81      	CLRF        PORTB 
;comunicador_entre_PIC_PC.c,225 :: 		TXSTA1.SYNC = 0;  //modo assincrono
0x0428	0x98AC      	BCF         TXSTA1, 4 
;comunicador_entre_PIC_PC.c,226 :: 		RCSTA1.SPEN = 1;  //liga a eusart
0x042A	0x8EAB      	BSF         RCSTA1, 7 
;comunicador_entre_PIC_PC.c,227 :: 		TXSTA1.TXEN = 1;  //liga o circuito transmissor
0x042C	0x8AAC      	BSF         TXSTA1, 5 
;comunicador_entre_PIC_PC.c,228 :: 		TX1IE_bit = 0;    //flag do receptor setado para zero pois não será utilizado a interrupção por envio de dados
0x042E	0x989D      	BCF         TX1IE_bit, BitPos(TX1IE_bit+0) 
;comunicador_entre_PIC_PC.c,229 :: 		ANSELB = 0x00;
0x0430	0x010F      	MOVLB       15
0x0432	0x6B39      	CLRF        ANSELB, 1
;comunicador_entre_PIC_PC.c,230 :: 		ANSELC = 0x00;
0x0434	0x6B3A      	CLRF        ANSELC, 1
;comunicador_entre_PIC_PC.c,232 :: 		TXSTA2.SYNC = 0;  //modo assincrono
0x0436	0x9872      	BCF         TXSTA2, 4 
;comunicador_entre_PIC_PC.c,233 :: 		RCSTA2.SPEN = 1;  //liga a eusart
0x0438	0x8E71      	BSF         RCSTA2, 7 
;comunicador_entre_PIC_PC.c,234 :: 		TXSTA2.TXEN = 1;  //liga o circuito transmissor
0x043A	0x8A72      	BSF         TXSTA2, 5 
;comunicador_entre_PIC_PC.c,235 :: 		TX2IE_bit = 0;    //flag do receptor setado para zero pois não será utilizado a interrupção por envio de dados
0x043C	0x98A3      	BCF         TX2IE_bit, BitPos(TX2IE_bit+0) 
;comunicador_entre_PIC_PC.c,236 :: 		ANSELD = 0x00;    //Os registrador Analogico-Digital devem estar desabilitado para que a comunicação funcione (ANSELB para o EUSART1 e ANSELC para EUSART2
0x043E	0x6B3B      	CLRF        ANSELD, 1
;comunicador_entre_PIC_PC.c,240 :: 		RCSTA1.CREN = 1; //similar ao spen. Habilita o circuito
0x0440	0x88AB      	BSF         RCSTA1, 4 
;comunicador_entre_PIC_PC.c,243 :: 		while(PIR1.RC1IF) {RCREG1;} //para limpar o buffer. Uma precaução antes de iniciar o programa. Enquanto houver dados no buffer, lê-los.
L_main42:
0x0442	0xAA9E      	BTFSS       PIR1, 5 
0x0444	0xD001      	BRA         L_main43
0x0446	0xD7FD      	BRA         L_main42
L_main43:
;comunicador_entre_PIC_PC.c,245 :: 		RCSTA2.CREN = 1; //similar ao spen. Habilita o circuito
0x0448	0x8871      	BSF         RCSTA2, 4 
;comunicador_entre_PIC_PC.c,248 :: 		while(PIR3.RC2IF) {RCREG2;} //para limpar o buffer. Uma precaução antes de iniciar o programa. Enquanto houver dados no buffer, lê-los.
L_main44:
0x044A	0xAAA4      	BTFSS       PIR3, 5 
0x044C	0xD001      	BRA         L_main45
0x044E	0xD7FD      	BRA         L_main44
L_main45:
;comunicador_entre_PIC_PC.c,252 :: 		INTCON.GIE = 0x01;  //habilita a interrupção global
0x0450	0x8EF2      	BSF         INTCON, 7 
;comunicador_entre_PIC_PC.c,253 :: 		INTCON.PEIE = 0x01; //habilita a interrupção por periférico
0x0452	0x8CF2      	BSF         INTCON, 6 
;comunicador_entre_PIC_PC.c,254 :: 		RCON.IPEN = 0x01; //interrupção por prioridades habilitado (significa que poderá haver interrupção de alto nível e baixo nível no programa)
0x0454	0x8ED0      	BSF         RCON, 7 
;comunicador_entre_PIC_PC.c,256 :: 		IPR1.RC1IP = 0x01;         //recepção de dados (RX) possui interrupção de baixa prioridade
0x0456	0x8A9F      	BSF         IPR1, 5 
;comunicador_entre_PIC_PC.c,257 :: 		IPR1.TX1IP = 0x01;         //tranmissao possui interrupção de baixa prioridade
0x0458	0x889F      	BSF         IPR1, 4 
;comunicador_entre_PIC_PC.c,258 :: 		PIR1.TX1IF = 0x00;            //flag setada para um toda vez que a transmissão eusart estiver habilitada e não houver dados sendo segurados no TXREG. é apenas zero quando o registrador tsr esta ocupado com um byte e um byte está a espara para a tranmissão em txreg
0x045A	0x989E      	BCF         PIR1, 4 
;comunicador_entre_PIC_PC.c,259 :: 		PIE1.TX1IE = 0x00;            //desabilita interrupção por tx
0x045C	0x989D      	BCF         PIE1, 4 
;comunicador_entre_PIC_PC.c,260 :: 		PIR1.RC1IF = 0x00;            //flag setada para um enquanto houver dados para receber e tratar
0x045E	0x9A9E      	BCF         PIR1, 5 
;comunicador_entre_PIC_PC.c,261 :: 		PIE1.RC1IE = 0x01;            // habilita a interrpção por rx
0x0460	0x8A9D      	BSF         PIE1, 5 
;comunicador_entre_PIC_PC.c,263 :: 		IPR3.RC2IP = 0x01;         //recepção de dados (RX) possui interrupção de alta prioridade
0x0462	0x8AA5      	BSF         IPR3, 5 
;comunicador_entre_PIC_PC.c,264 :: 		IPR3.TX2IP = 0x01;         //tranmissao possui interrupção de alta prioridade
0x0464	0x88A5      	BSF         IPR3, 4 
;comunicador_entre_PIC_PC.c,265 :: 		PIR3.TX2IF = 0x00;            //flag setada para um toda vez que a transmissão eusart estiver habilitada e não houver dados sendo segurados no TXREG. é apenas zero quando o registrador tsr esta ocupado com um byte e um byte está a espara para a tranmissão em txreg
0x0466	0x98A4      	BCF         PIR3, 4 
;comunicador_entre_PIC_PC.c,266 :: 		PIE3.TX2IE = 0x00;            //desabilita interrupção por tx
0x0468	0x98A3      	BCF         PIE3, 4 
;comunicador_entre_PIC_PC.c,267 :: 		PIR3.RC2IF = 0x00;            //flag setada para um enquanto houver dados para receber e tratar
0x046A	0x9AA4      	BCF         PIR3, 5 
;comunicador_entre_PIC_PC.c,268 :: 		PIE3.RC2IE = 0x01;            // habilita a interrpção por rx
0x046C	0x8AA3      	BSF         PIE3, 5 
;comunicador_entre_PIC_PC.c,271 :: 		PIR5.TMR6IF = 0;
0x046E	0x947E      	BCF         PIR5, 2 
;comunicador_entre_PIC_PC.c,272 :: 		PIR5.TMR4IF = 0;
0x0470	0x907E      	BCF         PIR5, 0 
;comunicador_entre_PIC_PC.c,273 :: 		IPR5.TMR6IP = 0;
0x0472	0x947F      	BCF         IPR5, 2 
;comunicador_entre_PIC_PC.c,274 :: 		IPR5.TMR4IP = 0;
0x0474	0x907F      	BCF         IPR5, 0 
;comunicador_entre_PIC_PC.c,275 :: 		TMR6 = 0;
0x0476	0x6B4C      	CLRF        TMR6, 1
;comunicador_entre_PIC_PC.c,276 :: 		TMR4 = 0;
0x0478	0x6B53      	CLRF        TMR4, 1
;comunicador_entre_PIC_PC.c,277 :: 		T6CON = 0b01111011; //os valores do timer ainda devem ser ajustados corretamente
0x047A	0x0E7B      	MOVLW       123
0x047C	0x6F4A      	MOVWF       T6CON, 1
;comunicador_entre_PIC_PC.c,278 :: 		T4CON = 0b00111001; //define um tempo para 10 ms (pode estar errao por hora) considerando uma entrada de 136 vezes na interrupção  e uma frequencia d 31MHz
0x047E	0x0E39      	MOVLW       57
0x0480	0x6F51      	MOVWF       T4CON, 1
;comunicador_entre_PIC_PC.c,279 :: 		T6CON.TMR6ON = 0;
0x0482	0x954A      	BCF         T6CON, 2, 1
;comunicador_entre_PIC_PC.c,280 :: 		T6CON.TMR4ON = 0;
0x0484	0x954A      	BCF         T6CON, 2, 1
;comunicador_entre_PIC_PC.c,284 :: 		for(i = 0; i < tamanhoBuffer;i++) bufferPc[i] = bufferModulo[i] = 0xFF;
0x0486	0x0101      	MOVLB       1
0x0488	0x6BF4      	CLRF        main_i_L0, 1
0x048A	0x6BF5      	CLRF        main_i_L0+1, 1
L_main46:
0x048C	0x0E80      	MOVLW       128
0x048E	0x19F5      	XORWF       main_i_L0+1, 0, 1
0x0490	0x6E00      	MOVWF       R0 
0x0492	0x0E80      	MOVLW       128
0x0494	0x5C00      	SUBWF       R0, 0 
0x0496	0xE102      	BNZ         L__main67
0x0498	0x0E3C      	MOVLW       60
0x049A	0x5DF4      	SUBWF       main_i_L0, 0, 1
L__main67:
0x049C	0xE21F      	BC          L_main47
0x049E	0x0E79      	MOVLW       bufferPc
0x04A0	0x25F4      	ADDWF       main_i_L0, 0, 1
0x04A2	0x6E02      	MOVWF       R2 
0x04A4	0x0E01      	MOVLW       hi_addr(bufferPc)
0x04A6	0x21F5      	ADDWFC      main_i_L0+1, 0, 1
0x04A8	0x6E03      	MOVWF       R3 
0x04AA	0x0EB6      	MOVLW       bufferModulo
0x04AC	0x25F4      	ADDWF       main_i_L0, 0, 1
0x04AE	0x6E00      	MOVWF       R0 
0x04B0	0x0E01      	MOVLW       hi_addr(bufferModulo)
0x04B2	0x21F5      	ADDWFC      main_i_L0+1, 0, 1
0x04B4	0x6E01      	MOVWF       R1 
0x04B6	0xFFE1C000  	MOVFF       R0, FSR1L
0x04BA	0xFFE2C001  	MOVFF       R1, FSR1H
0x04BE	0x0EFF      	MOVLW       255
0x04C0	0x6EE6      	MOVWF       POSTINC1 
0x04C2	0xFFE9C000  	MOVFF       R0, FSR0L
0x04C6	0xFFEAC001  	MOVFF       R1, FSR0H
0x04CA	0xFFE1C002  	MOVFF       R2, FSR1L
0x04CE	0xFFE2C003  	MOVFF       R3, FSR1H
0x04D2	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x04D6	0x4BF4      	INFSNZ      main_i_L0, 1, 1
0x04D8	0x2BF5      	INCF        main_i_L0+1, 1, 1
0x04DA	0xD7D8      	BRA         L_main46
L_main47:
;comunicador_entre_PIC_PC.c,288 :: 		posBufferPc = 0;
0x04DC	0x6B2E      	CLRF        _posBufferPc, 1
0x04DE	0x6B2F      	CLRF        _posBufferPc+1, 1
;comunicador_entre_PIC_PC.c,289 :: 		posBufferModulo = 0;
0x04E0	0x6B2C      	CLRF        _posBufferModulo, 1
0x04E2	0x6B2D      	CLRF        _posBufferModulo+1, 1
;comunicador_entre_PIC_PC.c,290 :: 		PORTB = 0x00;
0x04E4	0x6A81      	CLRF        PORTB 
;comunicador_entre_PIC_PC.c,291 :: 		while(1)
L_main49:
;comunicador_entre_PIC_PC.c,293 :: 		retorno = loop();
0x04E6	0xDE7E      	RCALL       _loop
0x04E8	0xF1B5C000  	MOVFF       R0, _retorno
;comunicador_entre_PIC_PC.c,295 :: 		if(PIR5.TMR6IF)
0x04EC	0xA47E      	BTFSS       PIR5, 2 
0x04EE	0xD01A      	BRA         L_main51
;comunicador_entre_PIC_PC.c,297 :: 		PIR5.TMR6IF = 0;
0x04F0	0x947E      	BCF         PIR5, 2 
;comunicador_entre_PIC_PC.c,298 :: 		T6CON.TMR6ON = 0;
0x04F2	0x010F      	MOVLB       15
0x04F4	0x954A      	BCF         T6CON, 2, 1
;comunicador_entre_PIC_PC.c,299 :: 		if(posBufferPc > offset + 5)
0x04F6	0x0E80      	MOVLW       128
0x04F8	0x6E00      	MOVWF       R0 
0x04FA	0x0E80      	MOVLW       128
0x04FC	0x0101      	MOVLB       1
0x04FE	0x192F      	XORWF       _posBufferPc+1, 0, 1
0x0500	0x5C00      	SUBWF       R0, 0 
0x0502	0xE102      	BNZ         L__main68
0x0504	0x512E      	MOVF        _posBufferPc, 0, 1
0x0506	0x082D      	SUBLW       45
L__main68:
0x0508	0xE202      	BC          L_main52
;comunicador_entre_PIC_PC.c,301 :: 		posBufferPc = 0;
0x050A	0x6B2E      	CLRF        _posBufferPc, 1
0x050C	0x6B2F      	CLRF        _posBufferPc+1, 1
;comunicador_entre_PIC_PC.c,302 :: 		}
L_main52:
;comunicador_entre_PIC_PC.c,303 :: 		if(posBufferModulo > offset)
0x050E	0x0E80      	MOVLW       128
0x0510	0x6E00      	MOVWF       R0 
0x0512	0x0E80      	MOVLW       128
0x0514	0x192D      	XORWF       _posBufferModulo+1, 0, 1
0x0516	0x5C00      	SUBWF       R0, 0 
0x0518	0xE102      	BNZ         L__main69
0x051A	0x512C      	MOVF        _posBufferModulo, 0, 1
0x051C	0x0828      	SUBLW       40
L__main69:
0x051E	0xE202      	BC          L_main53
;comunicador_entre_PIC_PC.c,305 :: 		posBufferModulo = 0;
0x0520	0x6B2C      	CLRF        _posBufferModulo, 1
0x0522	0x6B2D      	CLRF        _posBufferModulo+1, 1
;comunicador_entre_PIC_PC.c,306 :: 		}
L_main53:
;comunicador_entre_PIC_PC.c,307 :: 		}
L_main51:
;comunicador_entre_PIC_PC.c,308 :: 		}
0x0524	0xD7E0      	BRA         L_main49
;comunicador_entre_PIC_PC.c,309 :: 		}
L_end_main:
0x0526	0xD7FF      	BRA         $+0
; end of _main
0x0688	0xF019EE10  	LFSR        1, 25
0x068C	0x0E60      	MOVLW       96
0x068E	0x6E00      	MOVWF       R0 
0x0690	0x0E02      	MOVLW       2
0x0692	0x6E01      	MOVWF       R1 
0x0694	0x0E28      	MOVLW       40
0x0696	0x6EF6      	MOVWF       4086 
0x0698	0x0E05      	MOVLW       5
0x069A	0x6EF7      	MOVWF       TBLPTRH 
0x069C	0x0E00      	MOVLW       0
0x069E	0x6EF8      	MOVWF       TBLPTRU 
0x06A0	0xF001ECFA  	CALL        1012, 0
0x06A4	0x0012      	RETURN      0
;comunicador_entre_PIC_PC.c,0 :: ?ICS?lstr9_comunicador_entre_PIC_PC
0x0528	0x6176 ;?ICS?lstr9_comunicador_entre_PIC_PC+0
0x052A	0x6F6C ;?ICS?lstr9_comunicador_entre_PIC_PC+2
0x052C	0x3272 ;?ICS?lstr9_comunicador_entre_PIC_PC+4
0x052E	0x00 ;?ICS?lstr9_comunicador_entre_PIC_PC+6
; end of ?ICS?lstr9_comunicador_entre_PIC_PC
;comunicador_entre_PIC_PC.c,0 :: ?ICS?lstr8_comunicador_entre_PIC_PC
0x052F	0x654D ;?ICS?lstr8_comunicador_entre_PIC_PC+0
0x0531	0x7220 ;?ICS?lstr8_comunicador_entre_PIC_PC+2
0x0533	0x7365 ;?ICS?lstr8_comunicador_entre_PIC_PC+4
0x0535	0x6F70 ;?ICS?lstr8_comunicador_entre_PIC_PC+6
0x0537	0x646E ;?ICS?lstr8_comunicador_entre_PIC_PC+8
0x0539	0x2061 ;?ICS?lstr8_comunicador_entre_PIC_PC+10
0x053B	0x696D ;?ICS?lstr8_comunicador_entre_PIC_PC+12
0x053D	0x7263 ;?ICS?lstr8_comunicador_entre_PIC_PC+14
0x053F	0x216F ;?ICS?lstr8_comunicador_entre_PIC_PC+16
0x0541	0x00 ;?ICS?lstr8_comunicador_entre_PIC_PC+18
; end of ?ICS?lstr8_comunicador_entre_PIC_PC
;comunicador_entre_PIC_PC.c,0 :: ?ICS?lstr7_comunicador_entre_PIC_PC
0x0542	0x6E69 ;?ICS?lstr7_comunicador_entre_PIC_PC+0
0x0544	0x6176 ;?ICS?lstr7_comunicador_entre_PIC_PC+2
0x0546	0x6173 ;?ICS?lstr7_comunicador_entre_PIC_PC+4
0x0548	0x006F ;?ICS?lstr7_comunicador_entre_PIC_PC+6
; end of ?ICS?lstr7_comunicador_entre_PIC_PC
;comunicador_entre_PIC_PC.c,0 :: ?ICS?lstr10_comunicador_entre_PIC_PC
0x054A	0x6C42 ;?ICS?lstr10_comunicador_entre_PIC_PC+0
0x054C	0x636F ;?ICS?lstr10_comunicador_entre_PIC_PC+2
0x054E	0x456F ;?ICS?lstr10_comunicador_entre_PIC_PC+4
0x0550	0x656E ;?ICS?lstr10_comunicador_entre_PIC_PC+6
0x0552	0x6772 ;?ICS?lstr10_comunicador_entre_PIC_PC+8
0x0554	0x7A69 ;?ICS?lstr10_comunicador_entre_PIC_PC+10
0x0556	0x6461 ;?ICS?lstr10_comunicador_entre_PIC_PC+12
0x0558	0x3A6F ;?ICS?lstr10_comunicador_entre_PIC_PC+14
0x055A	0x3A38 ;?ICS?lstr10_comunicador_entre_PIC_PC+16
0x055C	0x6E49 ;?ICS?lstr10_comunicador_entre_PIC_PC+18
0x055E	0x6574 ;?ICS?lstr10_comunicador_entre_PIC_PC+20
0x0560	0x736E ;?ICS?lstr10_comunicador_entre_PIC_PC+22
0x0562	0x6469 ;?ICS?lstr10_comunicador_entre_PIC_PC+24
0x0564	0x6461 ;?ICS?lstr10_comunicador_entre_PIC_PC+26
0x0566	0x3A65 ;?ICS?lstr10_comunicador_entre_PIC_PC+28
0x0568	0x3531 ;?ICS?lstr10_comunicador_entre_PIC_PC+30
0x056A	0x00 ;?ICS?lstr10_comunicador_entre_PIC_PC+32
; end of ?ICS?lstr10_comunicador_entre_PIC_PC
;comunicador_entre_PIC_PC.c,0 :: ?ICS?lstr13_comunicador_entre_PIC_PC
0x056B	0x6F48 ;?ICS?lstr13_comunicador_entre_PIC_PC+0
0x056D	0x6172 ;?ICS?lstr13_comunicador_entre_PIC_PC+2
0x056F	0x6972 ;?ICS?lstr13_comunicador_entre_PIC_PC+4
0x0571	0x3A6F ;?ICS?lstr13_comunicador_entre_PIC_PC+6
0x0573	0x6964 ;?ICS?lstr13_comunicador_entre_PIC_PC+8
0x0575	0x0061 ;?ICS?lstr13_comunicador_entre_PIC_PC+10
; end of ?ICS?lstr13_comunicador_entre_PIC_PC
;comunicador_entre_PIC_PC.c,0 :: ?ICS?lstr12_comunicador_entre_PIC_PC
0x0577	0x6C42 ;?ICS?lstr12_comunicador_entre_PIC_PC+0
0x0579	0x636F ;?ICS?lstr12_comunicador_entre_PIC_PC+2
0x057B	0x456F ;?ICS?lstr12_comunicador_entre_PIC_PC+4
0x057D	0x656E ;?ICS?lstr12_comunicador_entre_PIC_PC+6
0x057F	0x6772 ;?ICS?lstr12_comunicador_entre_PIC_PC+8
0x0581	0x7A69 ;?ICS?lstr12_comunicador_entre_PIC_PC+10
0x0583	0x6461 ;?ICS?lstr12_comunicador_entre_PIC_PC+12
0x0585	0x3A6F ;?ICS?lstr12_comunicador_entre_PIC_PC+14
0x0587	0x3031 ;?ICS?lstr12_comunicador_entre_PIC_PC+16
0x0589	0x493A ;?ICS?lstr12_comunicador_entre_PIC_PC+18
0x058B	0x746E ;?ICS?lstr12_comunicador_entre_PIC_PC+20
0x058D	0x6E65 ;?ICS?lstr12_comunicador_entre_PIC_PC+22
0x058F	0x6973 ;?ICS?lstr12_comunicador_entre_PIC_PC+24
0x0591	0x6164 ;?ICS?lstr12_comunicador_entre_PIC_PC+26
0x0593	0x6564 ;?ICS?lstr12_comunicador_entre_PIC_PC+28
0x0595	0x313A ;?ICS?lstr12_comunicador_entre_PIC_PC+30
0x0597	0x0035 ;?ICS?lstr12_comunicador_entre_PIC_PC+32
; end of ?ICS?lstr12_comunicador_entre_PIC_PC
;comunicador_entre_PIC_PC.c,0 :: ?ICS?lstr11_comunicador_entre_PIC_PC
0x0599	0x6E49 ;?ICS?lstr11_comunicador_entre_PIC_PC+0
0x059B	0x6176 ;?ICS?lstr11_comunicador_entre_PIC_PC+2
0x059D	0x6964 ;?ICS?lstr11_comunicador_entre_PIC_PC+4
0x059F	0x6F64 ;?ICS?lstr11_comunicador_entre_PIC_PC+6
0x05A1	0x00 ;?ICS?lstr11_comunicador_entre_PIC_PC+8
; end of ?ICS?lstr11_comunicador_entre_PIC_PC
;comunicador_entre_PIC_PC.c,0 :: ?ICS?lstr2_comunicador_entre_PIC_PC
0x05A2	0x7541 ;?ICS?lstr2_comunicador_entre_PIC_PC+0
0x05A4	0x6F74 ;?ICS?lstr2_comunicador_entre_PIC_PC+2
0x05A6	0x3A72 ;?ICS?lstr2_comunicador_entre_PIC_PC+4
0x05A8	0x4820 ;?ICS?lstr2_comunicador_entre_PIC_PC+6
0x05AA	0x6E65 ;?ICS?lstr2_comunicador_entre_PIC_PC+8
0x05AC	0x6972 ;?ICS?lstr2_comunicador_entre_PIC_PC+10
0x05AE	0x7571 ;?ICS?lstr2_comunicador_entre_PIC_PC+12
0x05B0	0x2065 ;?ICS?lstr2_comunicador_entre_PIC_PC+14
0x05B2	0x614D ;?ICS?lstr2_comunicador_entre_PIC_PC+16
0x05B4	0x6C75 ;?ICS?lstr2_comunicador_entre_PIC_PC+18
0x05B6	0x7265 ;?ICS?lstr2_comunicador_entre_PIC_PC+20
0x05B8	0x4220 ;?ICS?lstr2_comunicador_entre_PIC_PC+22
0x05BA	0x726F ;?ICS?lstr2_comunicador_entre_PIC_PC+24
0x05BC	0x6567 ;?ICS?lstr2_comunicador_entre_PIC_PC+26
0x05BE	0x0073 ;?ICS?lstr2_comunicador_entre_PIC_PC+28
; end of ?ICS?lstr2_comunicador_entre_PIC_PC
;comunicador_entre_PIC_PC.c,0 :: ?ICS?lstr1_comunicador_entre_PIC_PC
0x05C0	0x6572 ;?ICS?lstr1_comunicador_entre_PIC_PC+0
0x05C2	0x616C ;?ICS?lstr1_comunicador_entre_PIC_PC+2
0x05C4	0x6F74 ;?ICS?lstr1_comunicador_entre_PIC_PC+4
0x05C6	0x6972 ;?ICS?lstr1_comunicador_entre_PIC_PC+6
0x05C8	0x006F ;?ICS?lstr1_comunicador_entre_PIC_PC+8
; end of ?ICS?lstr1_comunicador_entre_PIC_PC
;comunicador_entre_PIC_PC.c,0 :: ?ICS?lstr3_comunicador_entre_PIC_PC
0x05CA	0x7543 ;?ICS?lstr3_comunicador_entre_PIC_PC+0
0x05CC	0x7372 ;?ICS?lstr3_comunicador_entre_PIC_PC+2
0x05CE	0x206F ;?ICS?lstr3_comunicador_entre_PIC_PC+4
0x05D0	0xE974 ;?ICS?lstr3_comunicador_entre_PIC_PC+6
0x05D2	0x6E63 ;?ICS?lstr3_comunicador_entre_PIC_PC+8
0x05D4	0x6369 ;?ICS?lstr3_comunicador_entre_PIC_PC+10
0x05D6	0x206F ;?ICS?lstr3_comunicador_entre_PIC_PC+12
0x05D8	0x6D65 ;?ICS?lstr3_comunicador_entre_PIC_PC+14
0x05DA	0x6520 ;?ICS?lstr3_comunicador_entre_PIC_PC+16
0x05DC	0x656C ;?ICS?lstr3_comunicador_entre_PIC_PC+18
0x05DE	0x7274 ;?ICS?lstr3_comunicador_entre_PIC_PC+20
0x05E0	0x6EF4 ;?ICS?lstr3_comunicador_entre_PIC_PC+22
0x05E2	0x6369 ;?ICS?lstr3_comunicador_entre_PIC_PC+24
0x05E4	0x0061 ;?ICS?lstr3_comunicador_entre_PIC_PC+26
; end of ?ICS?lstr3_comunicador_entre_PIC_PC
;comunicador_entre_PIC_PC.c,0 :: ?ICS?lstr6_comunicador_entre_PIC_PC
0x05E6	0x6E69 ;?ICS?lstr6_comunicador_entre_PIC_PC+0
0x05E8	0x6176 ;?ICS?lstr6_comunicador_entre_PIC_PC+2
0x05EA	0x6964 ;?ICS?lstr6_comunicador_entre_PIC_PC+4
0x05EC	0x6F64 ;?ICS?lstr6_comunicador_entre_PIC_PC+6
0x05EE	0x00 ;?ICS?lstr6_comunicador_entre_PIC_PC+8
; end of ?ICS?lstr6_comunicador_entre_PIC_PC
;comunicador_entre_PIC_PC.c,0 :: ?ICS?lstr5_comunicador_entre_PIC_PC
0x05EF	0x2041 ;?ICS?lstr5_comunicador_entre_PIC_PC+0
0x05F1	0x7266 ;?ICS?lstr5_comunicador_entre_PIC_PC+2
0x05F3	0x7165 ;?ICS?lstr5_comunicador_entre_PIC_PC+4
0x05F5	0x6575 ;?ICS?lstr5_comunicador_entre_PIC_PC+6
0x05F7	0x636E ;?ICS?lstr5_comunicador_entre_PIC_PC+8
0x05F9	0x6169 ;?ICS?lstr5_comunicador_entre_PIC_PC+10
0x05FB	0x6420 ;?ICS?lstr5_comunicador_entre_PIC_PC+12
0x05FD	0x2065 ;?ICS?lstr5_comunicador_entre_PIC_PC+14
0x05FF	0x7274 ;?ICS?lstr5_comunicador_entre_PIC_PC+16
0x0601	0x6261 ;?ICS?lstr5_comunicador_entre_PIC_PC+18
0x0603	0x6C61 ;?ICS?lstr5_comunicador_entre_PIC_PC+20
0x0605	0x6F68 ;?ICS?lstr5_comunicador_entre_PIC_PC+22
0x0607	0xE920 ;?ICS?lstr5_comunicador_entre_PIC_PC+24
0x0609	0x203A ;?ICS?lstr5_comunicador_entre_PIC_PC+26
0x060B	0x00 ;?ICS?lstr5_comunicador_entre_PIC_PC+28
; end of ?ICS?lstr5_comunicador_entre_PIC_PC
;comunicador_entre_PIC_PC.c,0 :: ?ICS?lstr4_comunicador_entre_PIC_PC
0x060C	0x7551 ;?ICS?lstr4_comunicador_entre_PIC_PC+0
0x060E	0x6C61 ;?ICS?lstr4_comunicador_entre_PIC_PC+2
0x0610	0x6120 ;?ICS?lstr4_comunicador_entre_PIC_PC+4
0x0612	0x7320 ;?ICS?lstr4_comunicador_entre_PIC_PC+6
0x0614	0x6175 ;?ICS?lstr4_comunicador_entre_PIC_PC+8
0x0616	0x6620 ;?ICS?lstr4_comunicador_entre_PIC_PC+10
0x0618	0x6572 ;?ICS?lstr4_comunicador_entre_PIC_PC+12
0x061A	0x7571 ;?ICS?lstr4_comunicador_entre_PIC_PC+14
0x061C	0x6E65 ;?ICS?lstr4_comunicador_entre_PIC_PC+16
0x061E	0x6963 ;?ICS?lstr4_comunicador_entre_PIC_PC+18
0x0620	0x3F61 ;?ICS?lstr4_comunicador_entre_PIC_PC+20
0x0622	0x00 ;?ICS?lstr4_comunicador_entre_PIC_PC+22
; end of ?ICS?lstr4_comunicador_entre_PIC_PC
;comunicador_entre_PIC_PC.c,0 :: ?ICS?lstr22_comunicador_entre_PIC_PC
0x0623	0x454C ;?ICS?lstr22_comunicador_entre_PIC_PC+0
0x0625	0x3444 ;?ICS?lstr22_comunicador_entre_PIC_PC+2
0x0627	0x00 ;?ICS?lstr22_comunicador_entre_PIC_PC+4
; end of ?ICS?lstr22_comunicador_entre_PIC_PC
;comunicador_entre_PIC_PC.c,0 :: ?ICS?lstr21_comunicador_entre_PIC_PC
0x0628	0x6176 ;?ICS?lstr21_comunicador_entre_PIC_PC+0
0x062A	0x6F6C ;?ICS?lstr21_comunicador_entre_PIC_PC+2
0x062C	0x3472 ;?ICS?lstr21_comunicador_entre_PIC_PC+4
0x062E	0x00 ;?ICS?lstr21_comunicador_entre_PIC_PC+6
; end of ?ICS?lstr21_comunicador_entre_PIC_PC
;comunicador_entre_PIC_PC.c,0 :: ?ICS?lstr20_comunicador_entre_PIC_PC
0x062F	0x454C ;?ICS?lstr20_comunicador_entre_PIC_PC+0
0x0631	0x3344 ;?ICS?lstr20_comunicador_entre_PIC_PC+2
0x0633	0x00 ;?ICS?lstr20_comunicador_entre_PIC_PC+4
; end of ?ICS?lstr20_comunicador_entre_PIC_PC
;comunicador_entre_PIC_PC.c,0 :: ?ICS?lstr23_comunicador_entre_PIC_PC
0x0634	0x6176 ;?ICS?lstr23_comunicador_entre_PIC_PC+0
0x0636	0x6F6C ;?ICS?lstr23_comunicador_entre_PIC_PC+2
0x0638	0x3572 ;?ICS?lstr23_comunicador_entre_PIC_PC+4
0x063A	0x00 ;?ICS?lstr23_comunicador_entre_PIC_PC+6
; end of ?ICS?lstr23_comunicador_entre_PIC_PC
;comunicador_entre_PIC_PC.c,0 :: ?ICS_posBufferModulo
0x063B	0x0000 ;?ICS_posBufferModulo+0
; end of ?ICS_posBufferModulo
;comunicador_entre_PIC_PC.c,0 :: ?ICS_posBufferPc
0x063D	0x0000 ;?ICS_posBufferPc+0
; end of ?ICS_posBufferPc
;comunicador_entre_PIC_PC.c,0 :: ?ICS?lstr16_comunicador_entre_PIC_PC
0x063F	0x454C ;?ICS?lstr16_comunicador_entre_PIC_PC+0
0x0641	0x3144 ;?ICS?lstr16_comunicador_entre_PIC_PC+2
0x0643	0x00 ;?ICS?lstr16_comunicador_entre_PIC_PC+4
; end of ?ICS?lstr16_comunicador_entre_PIC_PC
;comunicador_entre_PIC_PC.c,0 :: ?ICS?lstr15_comunicador_entre_PIC_PC
0x0644	0x6F48 ;?ICS?lstr15_comunicador_entre_PIC_PC+0
0x0646	0x6172 ;?ICS?lstr15_comunicador_entre_PIC_PC+2
0x0648	0x6972 ;?ICS?lstr15_comunicador_entre_PIC_PC+4
0x064A	0x3A6F ;?ICS?lstr15_comunicador_entre_PIC_PC+6
0x064C	0x6F6E ;?ICS?lstr15_comunicador_entre_PIC_PC+8
0x064E	0x7469 ;?ICS?lstr15_comunicador_entre_PIC_PC+10
0x0650	0x0065 ;?ICS?lstr15_comunicador_entre_PIC_PC+12
; end of ?ICS?lstr15_comunicador_entre_PIC_PC
;comunicador_entre_PIC_PC.c,0 :: ?ICS?lstr14_comunicador_entre_PIC_PC
0x0652	0x6C42 ;?ICS?lstr14_comunicador_entre_PIC_PC+0
0x0654	0x636F ;?ICS?lstr14_comunicador_entre_PIC_PC+2
0x0656	0x456F ;?ICS?lstr14_comunicador_entre_PIC_PC+4
0x0658	0x656E ;?ICS?lstr14_comunicador_entre_PIC_PC+6
0x065A	0x6772 ;?ICS?lstr14_comunicador_entre_PIC_PC+8
0x065C	0x7A69 ;?ICS?lstr14_comunicador_entre_PIC_PC+10
0x065E	0x6461 ;?ICS?lstr14_comunicador_entre_PIC_PC+12
0x0660	0x3A6F ;?ICS?lstr14_comunicador_entre_PIC_PC+14
0x0662	0x3031 ;?ICS?lstr14_comunicador_entre_PIC_PC+16
0x0664	0x493A ;?ICS?lstr14_comunicador_entre_PIC_PC+18
0x0666	0x746E ;?ICS?lstr14_comunicador_entre_PIC_PC+20
0x0668	0x6E65 ;?ICS?lstr14_comunicador_entre_PIC_PC+22
0x066A	0x6973 ;?ICS?lstr14_comunicador_entre_PIC_PC+24
0x066C	0x6164 ;?ICS?lstr14_comunicador_entre_PIC_PC+26
0x066E	0x6564 ;?ICS?lstr14_comunicador_entre_PIC_PC+28
0x0670	0x313A ;?ICS?lstr14_comunicador_entre_PIC_PC+30
0x0672	0x00 ;?ICS?lstr14_comunicador_entre_PIC_PC+32
; end of ?ICS?lstr14_comunicador_entre_PIC_PC
;comunicador_entre_PIC_PC.c,0 :: ?ICS?lstr19_comunicador_entre_PIC_PC
0x0673	0x6176 ;?ICS?lstr19_comunicador_entre_PIC_PC+0
0x0675	0x6F6C ;?ICS?lstr19_comunicador_entre_PIC_PC+2
0x0677	0x3372 ;?ICS?lstr19_comunicador_entre_PIC_PC+4
0x0679	0x00 ;?ICS?lstr19_comunicador_entre_PIC_PC+6
; end of ?ICS?lstr19_comunicador_entre_PIC_PC
;comunicador_entre_PIC_PC.c,0 :: ?ICS?lstr18_comunicador_entre_PIC_PC
0x067A	0x454C ;?ICS?lstr18_comunicador_entre_PIC_PC+0
0x067C	0x3244 ;?ICS?lstr18_comunicador_entre_PIC_PC+2
0x067E	0x00 ;?ICS?lstr18_comunicador_entre_PIC_PC+4
; end of ?ICS?lstr18_comunicador_entre_PIC_PC
;comunicador_entre_PIC_PC.c,0 :: ?ICS?lstr17_comunicador_entre_PIC_PC
0x067F	0x6176 ;?ICS?lstr17_comunicador_entre_PIC_PC+0
0x0681	0x6F6C ;?ICS?lstr17_comunicador_entre_PIC_PC+2
0x0683	0x3272 ;?ICS?lstr17_comunicador_entre_PIC_PC+4
0x0685	0x00 ;?ICS?lstr17_comunicador_entre_PIC_PC+6
; end of ?ICS?lstr17_comunicador_entre_PIC_PC
;comunicador_entre_PIC_PC.c,0 :: ?ICS_margeOut
0x0686	0x0000 ;?ICS_margeOut+0
; end of ?ICS_margeOut
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008     [154]    _interrupt
0x00A2     [226]    _read
0x0184      [96]    _escrever
0x01E4     [528]    _loop
0x03F4      [16]    ___CC2DW
0x0404     [292]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0000       [1]    SPI2_Write_tmp_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    UART2_Init_tmp_L0
0x0000       [1]    R0
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0001       [1]    UART2_Read___tmp_UART2_Read_L0
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    FLASH_Write_64_i_L0
0x0001       [1]    R1
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [2]    escrever_i_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    memchr_s_L0
0x0002       [2]    __Lib_FT812_alt_memset_pp_L0
0x0002       [2]    __Lib_FT812_alt_memcpy_dd_L0
0x0002       [2]    __Lib_FT800_alt_strlen_cp_L0
0x0002       [2]    __Lib_FT810_alt_strlen_cp_L0
0x0002       [2]    strlen_cp_L0
0x0002       [2]    __Lib_FT800_alt_memset_pp_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0002       [2]    __Lib_FT812_alt_strlen_cp_L0
0x0002       [2]    __Lib_FT810_alt_memcpy_dd_L0
0x0002       [2]    __Lib_FT800_alt_memcpy_dd_L0
0x0002       [1]    R2
0x0002       [2]    memset_pp_L0
0x0002       [2]    __Lib_FT810_alt_memset_pp_L0
0x0002       [1]    FLASH_Write_64_SaveINTCON_L0
0x0003       [2]    __Lib_MmcFat16_f16_toInt_l_L0
0x0003       [4]    FT812_Canvas_SurrRect_minX_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0003       [2]    MM_TotalFreeMemSize_Tot_L0
0x0003       [2]    escrever_regSend_L0
0x0003       [4]    FT800_Canvas_SurrRect_minX_L0
0x0003       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT29
0x0003       [2]    memmove_tt_L0
0x0003       [1]    MM_Init_i_L0
0x0003       [1]    R3
0x0003       [4]    FT810_Canvas_SurrRect_minX_L0
0x0004       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT40
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    read_i_L0
0x0004       [2]    __Lib_FT810_alt_memcpy_ss_L0
0x0004       [2]    strcat_cp_L0
0x0004       [3]    __Lib_FT800_alt_strlen_const_cp_L0
0x0004       [2]    __Lib_FT800_alt_memcpy_ss_L0
0x0004       [2]    __Lib_MemManager_MM_GetMemAlign_P_L0
0x0004       [3]    __Lib_FT812_alt_strlen_const_cp_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    frexp_pom_L0
0x0004       [1]    R4
0x0004       [2]    __Lib_FT812_alt_memcpy_ss_L0
0x0004       [2]    strncat_cp_L0
0x0004       [3]    __Lib_FT810_alt_strlen_const_cp_L0
0x0005       [1]    R5
0x0005       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT54
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [2]    Ltrim_p_L0
0x0005       [2]    memmove_ff_L0
0x0005       [1]    MM_TotalFreeMemSize_i_L0
0x0006       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT69
0x0006       [1]    __Lib_MemManager_MM_GetMemAlign_i_L0
0x0006       [1]    R6
0x0007       [4]    FT812_Canvas_SurrRect_minY_L0
0x0007       [1]    R7
0x0007       [4]    FT800_Canvas_SurrRect_minY_L0
0x0007       [4]    FT810_Canvas_SurrRect_minY_L0
0x0008       [1]    R8
0x0009       [4]    __Lib_MmcFat16_f16_toLong_l_L0
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [4]    FT800_Canvas_SurrRect_maxX_L0
0x000B       [4]    FT812_Canvas_SurrRect_maxX_L0
0x000B       [1]    R11
0x000B       [4]    FT810_Canvas_SurrRect_maxX_L0
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x000F       [4]    FT800_Canvas_SurrRect_maxY_L0
0x000F       [4]    FT810_Canvas_SurrRect_maxY_L0
0x000F       [4]    FT812_Canvas_SurrRect_maxY_L0
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0019       [7]    ?lstr9_comunicador_entre_PIC_PC
0x0020      [19]    ?lstr8_comunicador_entre_PIC_PC
0x0033       [8]    ?lstr7_comunicador_entre_PIC_PC
0x003B      [33]    ?lstr10_comunicador_entre_PIC_PC
0x005C      [12]    ?lstr13_comunicador_entre_PIC_PC
0x0068      [34]    ?lstr12_comunicador_entre_PIC_PC
0x008A       [9]    ?lstr11_comunicador_entre_PIC_PC
0x0093      [30]    ?lstr2_comunicador_entre_PIC_PC
0x00B1      [10]    ?lstr1_comunicador_entre_PIC_PC
0x00BB      [28]    ?lstr3_comunicador_entre_PIC_PC
0x00D7       [9]    ?lstr6_comunicador_entre_PIC_PC
0x00E0      [29]    ?lstr5_comunicador_entre_PIC_PC
0x00FD      [23]    ?lstr4_comunicador_entre_PIC_PC
0x0114       [5]    ?lstr22_comunicador_entre_PIC_PC
0x0119       [7]    ?lstr21_comunicador_entre_PIC_PC
0x0120       [5]    ?lstr20_comunicador_entre_PIC_PC
0x0125       [7]    ?lstr23_comunicador_entre_PIC_PC
0x012C       [2]    _posBufferModulo
0x012E       [2]    _posBufferPc
0x0130       [5]    ?lstr16_comunicador_entre_PIC_PC
0x0135      [14]    ?lstr15_comunicador_entre_PIC_PC
0x0143      [33]    ?lstr14_comunicador_entre_PIC_PC
0x0164       [7]    ?lstr19_comunicador_entre_PIC_PC
0x016B       [5]    ?lstr18_comunicador_entre_PIC_PC
0x0170       [7]    ?lstr17_comunicador_entre_PIC_PC
0x0177       [2]    _margeOut
0x0179      [60]    bufferPc
0x01B5       [1]    _retorno
0x01B6      [60]    bufferModulo
0x01F2       [2]    _margeIn
0x01F4       [2]    main_i_L0
0x01F6      [10]    loop_saidaclock_L1
0x0201       [2]    FARG_read_mensagem
0x0201       [1]    FARG_escrever_paraQuem
0x0202       [2]    FARG_escrever_mensagem
0x0203       [2]    FARG_read_buf
0x0205       [2]    read_j_L0
0x0F39       [1]    ANSELB
0x0F3A       [1]    ANSELC
0x0F3B       [1]    ANSELD
0x0F4A       [1]    T6CON
0x0F4C       [1]    TMR6
0x0F51       [1]    T4CON
0x0F53       [1]    TMR4
0x0F70       [1]    BAUDCON2
0x0F71       [1]    RCSTA2
0x0F72       [1]    TXSTA2
0x0F73       [1]    TXREG2
0x0F74       [1]    RCREG2
0x0F74       [1]    RC2REG
0x0F75       [1]    SPBRG2
0x0F76       [1]    SPBRGH2
0x0F7E       [1]    PIR5
0x0F7F       [1]    IPR5
0x0F81       [1]    PORTB
0x0F93       [1]    TRISB
0x0F94       [1]    TRISC
0x0F95       [1]    TRISD
0x0F9D       [1]    PIE1
0x0F9D       [0]    TX1IE_bit
0x0F9E       [1]    PIR1
0x0F9E       [0]    RC1IF_bit
0x0F9F       [1]    IPR1
0x0FA3       [0]    TX2IE_bit
0x0FA3       [1]    PIE3
0x0FA4       [0]    RC2IF_bit
0x0FA4       [1]    PIR3
0x0FA5       [1]    IPR3
0x0FAB       [1]    RCSTA1
0x0FAC       [1]    TXSTA1
0x0FAD       [1]    TXREG1
0x0FAE       [1]    RC1REG
0x0FAE       [1]    RCREG1
0x0FAF       [1]    SPBRG1
0x0FB0       [1]    SPBRGH1
0x0FB8       [1]    BAUDCON1
0x0FD0       [1]    RCON
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0528       [7]    ?ICS?lstr9_comunicador_entre_PIC_PC
0x052F      [19]    ?ICS?lstr8_comunicador_entre_PIC_PC
0x0542       [8]    ?ICS?lstr7_comunicador_entre_PIC_PC
0x054A      [33]    ?ICS?lstr10_comunicador_entre_PIC_PC
0x056B      [12]    ?ICS?lstr13_comunicador_entre_PIC_PC
0x0577      [34]    ?ICS?lstr12_comunicador_entre_PIC_PC
0x0599       [9]    ?ICS?lstr11_comunicador_entre_PIC_PC
0x05A2      [30]    ?ICS?lstr2_comunicador_entre_PIC_PC
0x05C0      [10]    ?ICS?lstr1_comunicador_entre_PIC_PC
0x05CA      [28]    ?ICS?lstr3_comunicador_entre_PIC_PC
0x05E6       [9]    ?ICS?lstr6_comunicador_entre_PIC_PC
0x05EF      [29]    ?ICS?lstr5_comunicador_entre_PIC_PC
0x060C      [23]    ?ICS?lstr4_comunicador_entre_PIC_PC
0x0623       [5]    ?ICS?lstr22_comunicador_entre_PIC_PC
0x0628       [7]    ?ICS?lstr21_comunicador_entre_PIC_PC
0x062F       [5]    ?ICS?lstr20_comunicador_entre_PIC_PC
0x0634       [7]    ?ICS?lstr23_comunicador_entre_PIC_PC
0x063B       [2]    ?ICS_posBufferModulo
0x063D       [2]    ?ICS_posBufferPc
0x063F       [5]    ?ICS?lstr16_comunicador_entre_PIC_PC
0x0644      [14]    ?ICS?lstr15_comunicador_entre_PIC_PC
0x0652      [33]    ?ICS?lstr14_comunicador_entre_PIC_PC
0x0673       [7]    ?ICS?lstr19_comunicador_entre_PIC_PC
0x067A       [5]    ?ICS?lstr18_comunicador_entre_PIC_PC
0x067F       [7]    ?ICS?lstr17_comunicador_entre_PIC_PC
0x0686       [2]    ?ICS_margeOut
